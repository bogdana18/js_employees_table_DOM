{"version":3,"sources":["scripts/main.js"],"names":["header","document","querySelector","firstElementChild","children","list","table","textColumnASC","ageColumnASC","salaryColumnASC","addEventListener","e","target","closest","targetElementIndex","indexOf","employeeRowElements","getRowValue","row","textContent","getRowMoneyValue","replace","sort","row1","row2","localeCompare","append","contains","forEach","item","classList","remove","add","body","insertAdjacentHTML","pushNotification","title","description","type","setTimeout","removeChild","validation","key","value","length","isNaN","normalize","Number","toLocaleString","form","preventDefault","data","FormData","newNode","createElement","reset","parentElement","input","cellIndex","replaceChild","focus","innerText","handler","toLowerCase","code","blur"],"mappings":"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","file":"main.da220095.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst header = [...document.querySelector('thead').firstElementChild.children];\nconst list = document.querySelector('tbody');\nconst table = document.querySelector('table');\n\nlet textColumnASC = true;\nlet ageColumnASC = true;\nlet salaryColumnASC = true;\n\ntable.addEventListener('click', (e) => {\n  const target = e.target.closest('th');\n\n  const targetElementIndex = header.indexOf(target);\n\n  if (!target || targetElementIndex === -1) {\n    return;\n  }\n\n  const employeeRowElements = [...list.children];\n\n  const getRowValue = row => row.children[targetElementIndex].textContent;\n  const getRowMoneyValue = row => getRowValue(row).replace(/[^0-9]/g, '');\n\n  switch (target.textContent) {\n    case 'Age':\n      if (ageColumnASC) {\n        employeeRowElements.sort((row1, row2) =>\n          getRowValue(row1) - getRowValue(row2)\n        );\n        ageColumnASC = false;\n      } else {\n        employeeRowElements.sort((row1, row2) =>\n          getRowValue(row2) - getRowValue(row1)\n        );\n        ageColumnASC = true;\n      }\n      break;\n\n    case 'Salary':\n      if (salaryColumnASC) {\n        employeeRowElements.sort((row1, row2) =>\n          getRowMoneyValue(row1) - getRowMoneyValue(row2)\n        );\n        salaryColumnASC = false;\n      } else {\n        employeeRowElements.sort((row1, row2) =>\n          getRowMoneyValue(row2) - getRowMoneyValue(row1)\n        );\n        salaryColumnASC = true;\n      }\n      break;\n\n    case 'Name':\n    case 'Position':\n    case 'Office':\n      if (textColumnASC) {\n        employeeRowElements.sort((row1, row2) =>\n          getRowValue(row1).localeCompare(getRowValue(row2))\n        );\n        textColumnASC = false;\n      } else {\n        employeeRowElements.sort((row1, row2) =>\n          getRowValue(row2).localeCompare(getRowValue(row1))\n        );\n        textColumnASC = true;\n      }\n      break;\n  }\n\n  list.append(...employeeRowElements);\n});\n\nlist.addEventListener('click', (e) => {\n  const target = e.target.closest('tr');\n\n  if (!target || !list.contains(target)) {\n    return;\n  }\n\n  [...list.children].forEach(item => item.classList.remove('active'));\n\n  target.classList.add('active');\n});\n\ndocument.body.insertAdjacentHTML('beforeend', `\n  <form\n    action=\"#\"\n    method=\"get\"\n    class=\"new-employee-form\"\n  >\n    <label>Name:\n      <input name=\"name\" type=\"text\" data-qa=\"name\">\n    </label>\n    <label>Position:\n      <input name=\"position\" type=\"text\" data-qa=\"position\">\n    </label>\n    <label>Office:\n      <select name=\"office\" data-qa=\"office\">\n        <option value=\"Tokyo\">Tokyo</option>\n        <option value=\"Singapore\">Singapore</option>\n        <option value=\"London\">London</option>\n        <option value=\"New York\">New York</option>\n        <option value=\"Edinburgh\">Edinburgh</option>\n        <option value=\"San Francisco\">San Francisco</option>\n      </select>\n    </label>\n    <label>Age:\n      <input\n        name=\"age\"\n        type=\"number\"\n        data-qa=\"age\"\n        min=0\n      >\n    </label>\n    <label>Salary:\n      <input\n        name=\"salary\"\n        type=\"number\"\n        data-qa=\"salary\"\n        min=0\n      >\n    </label>\n    <button type=\"submit\">Save to table</button>\n  </form>\n`);\n\nconst pushNotification = (title, description, type) => {\n  document.body.insertAdjacentHTML('beforeend', `\n    <div class=\"notification ${type}\" data-qa=\"notification\">\n      <h2 class=\"title\">${title}</h2>\n      <p>${description}</p>\n  </div>\n  `);\n\n  setTimeout(() => {\n    document.body.removeChild(document.querySelector('.notification'));\n  }, 5000);\n};\n\nfunction validation(key, value) {\n  if (!value) {\n    pushNotification('ERROR!', 'Empty field value', 'error');\n\n    return false;\n  }\n\n  if (key === 'name' && value.length < 4) {\n    // eslint-disable-next-line max-len\n    pushNotification('ERROR!', 'Name length should be at least 4 letters', 'error');\n\n    return false;\n  }\n\n  if (key === 'age' && ((+value < 18 || +value > 90) || isNaN(+value))) {\n    pushNotification('ERROR!', 'Age should be from 18 to 90', 'error');\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction normalize(key, value) {\n  return key === 'salary'\n    ? `$${(Number(value)).toLocaleString('en-US')}`\n    : value;\n}\n\nconst form = document.body.querySelector('.new-employee-form');\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const data = new FormData(e.target);\n\n  const newNode = document.createElement('tr');\n\n  for (const [key, value] of data) {\n    if (!validation(key, value)) {\n      return;\n    }\n\n    if (key === 'salary') {\n      newNode.insertAdjacentHTML('beforeend', `\n      <td>${normalize(key, value)}</td>\n      `);\n    } else {\n      newNode.insertAdjacentHTML('beforeend', `<td>${value}</td>`);\n    }\n  }\n\n  list.append(newNode);\n\n  pushNotification('SUCCESS!',\n    'New employee is successfully added to the table', 'success');\n\n  form.reset();\n});\n\nlist.addEventListener('dblclick', (e) => {\n  const target = e.target.closest('td');\n  const parentElement = target.parentElement;\n  const input = document.createElement('input');\n  const cellIndex = target.cellIndex;\n\n  input.classList.add('cell-input');\n  input.type = 'text';\n  parentElement.replaceChild(input, target);\n  input.focus();\n  input.value = target.innerText;\n\n  input.addEventListener('blur', (handler) => {\n    const key = header[cellIndex]\n      .innerText.toLowerCase();\n\n    if (validation(key, input.value)) {\n      target.innerText = input.value;\n    }\n\n    parentElement.replaceChild(target, input);\n    input.remove();\n  });\n\n  input.addEventListener('keydown', (handler) => {\n    if (handler.type === 'keydown' && handler.code !== 'Enter') {\n      return;\n    }\n\n    input.blur();\n  });\n});\n"]}